
import java.io.File;
import java.io.FileNotFoundException;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author sarthakmanna
 */
public class Bug_Finder extends Helper {

    /**
     * Creates new form Checker
     */
    
    public Bug_Finder() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        textField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        textField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        comboBox1 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        comboBox2 = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        comboBox3 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        textField3 = new javax.swing.JTextField();
        radioButton1 = new javax.swing.JRadioButton();
        textField4 = new javax.swing.JTextField();
        radioButton2 = new javax.swing.JRadioButton();
        jButton4 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        radioButton3 = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bug Finder");
        setResizable(false);

        jLabel1.setText("Solution 1");

        textField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField1ActionPerformed(evt);
            }
        });

        jButton1.setText("Browse");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Solution 2");

        textField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField2ActionPerformed(evt);
            }
        });

        jButton2.setText("Browse");
        jButton2.setToolTipText("");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Language");

        comboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "C++ (.cpp)", "Java (.java)", "Python 2 (.py or .py2)", "Python 3 (.py3)" }));

        jLabel4.setText("Language");

        comboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "C++ (.cpp)", "Java (.java)", "Python 2 (.py or .py2)", "Python 3 (.py3)" }));

        jButton3.setText("Browse");
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel5.setText("Language");
        jLabel5.setEnabled(false);

        comboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "C++ (.cpp)", "Java (.java)", "Python 2 (.py or .py2)", "Python 3 (.py3)" }));
        comboBox3.setEnabled(false);

        jLabel6.setText("Code");
        jLabel6.setEnabled(false);

        textField3.setEnabled(false);
        textField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField3ActionPerformed(evt);
            }
        });

        radioButton1.setText("Generate Test File");
        radioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton1ActionPerformed(evt);
            }
        });

        textField4.setEnabled(false);
        textField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField4ActionPerformed(evt);
            }
        });

        radioButton2.setText("Select Test File");
        radioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("Browse");
        jButton4.setEnabled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel8.setText("File");
        jLabel8.setEnabled(false);

        jButton5.setText("Run");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Show Log");
        jButton6.setEnabled(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        radioButton3.setSelected(true);
        radioButton3.setText("Custom Input");
        radioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton3ActionPerformed(evt);
            }
        });

        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        jButton7.setText("Set N");
        jButton7.setEnabled(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Set TL");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Set TL");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setIcon(getInformationIcon());
        jButton10.setToolTipText("");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(comboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(textField2, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(comboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioButton2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textField4, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(textField3, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                                    .addComponent(comboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(radioButton1)
                            .addComponent(radioButton3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jButton8))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jButton9))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(radioButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(radioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(textField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jButton7))
                .addGap(18, 18, 18)
                .addComponent(radioButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(textField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(lastVisitedDirectory);
        fileChooser.showOpenDialog(null);
        
        File selFile = fileChooser.getSelectedFile();
        
        if(selFile != null)
        {
            lastVisitedDirectory = selFile.getParentFile();
            textField1.setText(selFile.getAbsolutePath());
            textFieldActionPerformed(textField1, comboBox1);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(lastVisitedDirectory);
        fileChooser.showOpenDialog(null);
        
        File selFile = fileChooser.getSelectedFile();
        
        if(selFile != null)
        {
            lastVisitedDirectory = selFile.getParentFile();
            textField2.setText(selFile.getAbsolutePath());
            textFieldActionPerformed(textField2, comboBox2);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void textField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField1ActionPerformed
        // TODO add your handling code here:
        textFieldActionPerformed(textField1, comboBox1);
    }//GEN-LAST:event_textField1ActionPerformed

    private void textField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField2ActionPerformed
        // TODO add your handling code here:
        textFieldActionPerformed(textField2, comboBox2);
    }//GEN-LAST:event_textField2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(lastVisitedDirectory);
        fileChooser.showOpenDialog(null);
        
        File selFile = fileChooser.getSelectedFile();
        
        if(selFile != null)
        {
            lastVisitedDirectory = selFile.getParentFile();
            textField3.setText(selFile.getAbsolutePath());
            textFieldActionPerformed(textField3, comboBox3);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void textField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField3ActionPerformed
        // TODO add your handling code here:
        textFieldActionPerformed(textField3, comboBox3);
    }//GEN-LAST:event_textField3ActionPerformed

    private void textField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textField4ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(lastVisitedDirectory);
        fileChooser.showOpenDialog(null);
        
        File selFile = fileChooser.getSelectedFile();
        
        if(selFile != null)
        {
            lastVisitedDirectory = selFile.getParentFile();
            textField4.setText(selFile.getAbsolutePath());
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void radioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButton1ActionPerformed
        // TODO add your handling code here:
        setEnabledPane1(true);
        setEnabledPane2(false);
        setEnabledPane3(false);
    }//GEN-LAST:event_radioButton1ActionPerformed

    private void radioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButton2ActionPerformed
        // TODO add your handling code here:
        setEnabledPane1(false);
        setEnabledPane2(true);
        setEnabledPane3(false);
    }//GEN-LAST:event_radioButton2ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, error_message,
                "Error Log", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        jButton5.setText("Running...");
        
        allCompiled = false;
        int currTest = 0;
        boolean successfulRun;
        resetTimers();
        
        do
        {
            ++currTest;
            System.out.print("\nRun " + currTest + "............");
            outputMatches = false;
            
            successfulRun = runButtonActionPerformed();
            
            allCompiled = true;
            
            //System.out.println(runningTime());
        } while(outputMatches && currTest < timesToRun);
        
        if(outputMatches)
        {
            jButton6.setEnabled(false);
            JOptionPane.showMessageDialog(null, "Outputs match.\n\n" + runningTime(),
                    "Executed successfully", JOptionPane.INFORMATION_MESSAGE);
        }
        else if(successfulRun)
        {
            jButton6.setEnabled(true);
            JOptionPane.showMessageDialog(null, "Outputs mismatch.\n"
                    + "View error log for more details.\n\n" + runningTime(),
                    "Execution Failed", JOptionPane.ERROR_MESSAGE);
            error_message.append("\nTest File location: ")
                    .append(input.getAbsolutePath()).append("\n");
            error_message.append("Solution 1 output file location: ")
                    .append(output1.getAbsolutePath()).append("\n");
            error_message.append("Solution 2 output file location: ")
                    .append(output2.getAbsolutePath()).append("\n");
        }
        
        jButton5.setText("Run");
    }//GEN-LAST:event_jButton5ActionPerformed

    boolean runButtonActionPerformed()
    {
        System.out.println();
        
        error_message = new StringBuilder();
        input = null;
        output1 = null;
        output2 = null;
        
        try
        {
            long startTime = System.currentTimeMillis();
            
            generateInput();
            
            inputTotal = Math.max(0, inputTotal);
            inputTotal += System.currentTimeMillis() - startTime;
        }
        catch(Exception e)
        {
            jButton6.setEnabled(true);
            if(e.getMessage() != null)
                error_message.append(e.getMessage()).append("\n");
            JOptionPane.showMessageDialog(null, "Could not generate test file.\n"
                    + "View error log for more details.\n\n" + runningTime(), 
                    "Execution Failed", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        try
        {
            long startTime = System.currentTimeMillis();
            
            output1 = run(new File(textField1.getText()),
                    comboBox1.getSelectedIndex(), input, "output1.txt", tlSol1);
            
            if(tempCompile >= 0)
            {
                sol1Compile = Math.max(0, sol1Compile);
                sol1Compile += tempCompile;
            }
            if(tempExec >= 0)
            {
                sol1Exec = Math.max(0, sol1Exec);
                sol1Exec += tempExec;
            }
            sol1Total = Math.max(0, sol1Total);
            sol1Total += System.currentTimeMillis() - startTime;
        }
        catch(Exception e)
        {
            jButton6.setEnabled(true);
            if(e.getMessage() != null)
                error_message.append(e.getMessage()).append("\n");
            JOptionPane.showMessageDialog(null, "Execution of Solution 1 failed.\n"
                    + "View error log for more details.\n\n" + runningTime(),
                    "Execution Failed", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        try
        {
            long startTime = System.currentTimeMillis();
            
            output2 = run(new File(textField2.getText()),
                    comboBox2.getSelectedIndex(), input, "output2.txt", tlSol2);
            
            if(tempCompile >= 0)
            {
                sol2Compile = Math.max(0, sol2Compile);
                sol2Compile += tempCompile;
            }
            if(tempExec >= 0)
            {
                sol2Exec = Math.max(0, sol2Exec);
                sol2Exec += tempExec;
            }
            sol2Total = Math.max(0, sol2Total);
            sol2Total += System.currentTimeMillis() - startTime;
        }
        catch(Exception e)
        {
            jButton6.setEnabled(true);
            if(e.getMessage() != null)
                error_message.append(e.getMessage()).append("\n");
            JOptionPane.showMessageDialog(null, "Execution of Solution 2 failed.\n"
                    + " View error log for more details.\n\n" + runningTime(),
                    "Execution Failed", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        try
        {
            long startTime = System.currentTimeMillis();
            
            matchOutputs();
            
            matchOutputsTime = Math.max(0, matchOutputsTime);
            matchOutputsTime += System.currentTimeMillis() - startTime;
        }
        catch(Exception e)
        {
            error_message.append("Some internal error has occurred !!!\n") 
                    .append("Please report this issue to Sarthak Manna at\n")
                    .append("sarthakmannaofficial@gmail.com.\n\n").append(runningTime());
            jButton6.setEnabled(true);
            JOptionPane.showMessageDialog(null, error_message,
                    "Unexpected Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        System.out.println("Perfect Run. No error encountered.");
        return true;
    }
    
    
    void generateInput() throws Exception
    {
        if(radioButton1.isSelected())
        {
            input = run(new File(textField3.getText()),
                    comboBox3.getSelectedIndex(), null, "input.txt", tlGenInp);
            
            if(tempCompile >= 0)
            {
                inputCompile = Math.max(0, inputCompile);
                inputCompile += tempCompile;
            }
            if(tempExec >= 0)
            {
                inputExec = Math.max(0, inputExec);
                inputExec += tempExec;
            }
        }
        else if(radioButton2.isSelected())
        {
            File file = new File(textField4.getText());
            if(!file.exists())
            {
                error_message.append("Input File does not exist.\n");
                throw new FileNotFoundException();
            }
            input = file;
        }
        else
            input = writeIntoFile(textArea.getText(), "input.txt");
    }
    
    private String runningTime()
    {
        StringBuilder presentableString = new StringBuilder();
        
        presentableString.append("Generating Input\n");
        presentableString.append("Compilation Time: ")
                .append(inputCompile < 0 ? "--" : inputCompile).append(" ms\n");
        presentableString.append("Execution Time: ")
                .append(inputExec < 0 ? "--" : inputExec).append(" ms\n");
        presentableString.append("Total Time: ")
                .append(inputTotal < 0 ? "--" : inputTotal).append(" ms\n\n");
        
        presentableString.append("Solution 1\n");
        presentableString.append("Compilation Time: ")
                .append(sol1Compile < 0 ? "--" : sol1Compile).append(" ms\n");
        presentableString.append("Execution Time: ")
                .append(sol1Exec < 0 ? "--" : sol1Exec).append(" ms\n");
        presentableString.append("Total Time: ")
                .append(sol1Total < 0 ? "--" : sol1Total).append(" ms\n\n");
        
        presentableString.append("Solution 2\n");
        presentableString.append("Compilation Time: ")
                .append(sol2Compile < 0 ? "--" : sol2Compile).append(" ms\n");
        presentableString.append("Execution Time: ")
                .append(sol2Exec < 0 ? "--" : sol2Exec).append(" ms\n");
        presentableString.append("Total Time: ")
                .append(sol2Total < 0 ? "--" : sol2Total).append(" ms\n\n");
        
        presentableString.append("Matching Outputs: ")
                .append(matchOutputsTime < 0 ? "--" : matchOutputsTime).append(" ms\n\n");
        
        return presentableString.toString();
    }
    
    File run(File code, int language, File input, String outputFilename, long execTL)
            throws Exception
    {
        tempCompile = tempExec = -7;
        if(!code.exists())
        {
            error_message.append("File does not exist.\n");
            throw new FileNotFoundException();
        }
        
        switch(language)
        {
            case 0 :    // C++
                if(!allCompiled)
                    compileCppFile(code, compileTimeLimit);
                return runCppFile(code, input, outputFilename, execTL);
                
            case 1 :    // Java
                if(!allCompiled)
                    compileJavaFile(code, compileTimeLimit);
                return runJavaFile(code, input, outputFilename, execTL);
                
            case 2 :    // Python 2
                return runPython2File(code, input, outputFilename, execTL);
                
            case 3 :    // Python 3
                return runPython3File(code, input, outputFilename, execTL);
        }
        throw new Exception("Unexpected Error !!!\n");
    }
    
    
    private void radioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButton3ActionPerformed
        // TODO add your handling code here:
        setEnabledPane1(false);
        setEnabledPane2(false);
        setEnabledPane3(true);
    }//GEN-LAST:event_radioButton3ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        for(; ; )
        {
            try
            {
                String inputString = JOptionPane.showInputDialog(this, "Input N",
                        "Set N", JOptionPane.QUESTION_MESSAGE);
                if(inputString == null)
                    break;
                int times = Integer.parseInt(inputString);
                if(times <= 0)
                    throw new Exception();
                timesToRun = times;
                break;
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this, "N must be a positive integer.",
                        "Invalid N", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        for(; ; )
        {
            try
            {
                String inputString = JOptionPane.showInputDialog(this,
                        "Input Time Limit for Solution 2 (in milliseconds)",
                        "Set Time Limit",
                        JOptionPane.QUESTION_MESSAGE);
                if(inputString == null)
                    break;
                long tl = Long.parseLong(inputString);
                if(tl <= 0)
                    throw new Exception();
                tlSol2 = tl;
                break;
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this, "Value must be a positive integer.",
                        "Invalid Time Limit", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        for(; ; )
        {
            try
            {
                String inputString = JOptionPane.showInputDialog(this,
                        "Input Time Limit for Solution 1 (in milliseconds)",
                        "Set Time Limit",
                        JOptionPane.QUESTION_MESSAGE);
                if(inputString == null)
                    break;
                long tl = Long.parseLong(inputString);
                if(tl <= 0)
                    throw new Exception();
                tlSol1 = tl;
                break;
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this, "Value must be a positive integer.",
                        "Invalid Time Limit", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        StringBuilder message = new StringBuilder();
        
        message.append("Time Limit for Compilation: ")
                .append(compileTimeLimit).append(" ms\n");
        message.append("Time Limit for generating each test file: ")
                .append(tlGenInp).append(" ms\n\n");
        message.append("Time Limit set for Solution 1 for each test file: ")
                .append(tlSol1).append(" ms\n");
        message.append("Time Limit set for Solution 2 for each test file: ")
                .append(tlSol2).append(" ms\n\n");
        message.append("Number of test files to be generated (N): ")
                .append(timesToRun).append("\n");
        
        JOptionPane.showMessageDialog(null, message,
                "Info", JOptionPane.PLAIN_MESSAGE);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void textFieldActionPerformed(JTextField tf, JComboBox cb)
    {
        String text = tf.getText();
        if(text.endsWith("cpp"))
            cb.setSelectedIndex(0);
        else if(text.endsWith("java"))
            cb.setSelectedIndex(1);
        else if(text.endsWith("py") || text.endsWith("py2"))
            cb.setSelectedIndex(2);
        else if(text.endsWith("py3"))
            cb.setSelectedIndex(3);
    }
    
    private void setEnabledPane1(boolean isEnabled)
    {
        radioButton1.setSelected(isEnabled);
        jLabel5.setEnabled(isEnabled);
        jLabel6.setEnabled(isEnabled);
        textField3.setEnabled(isEnabled);
        comboBox3.setEnabled(isEnabled);
        jButton3.setEnabled(isEnabled);
        jButton7.setEnabled(isEnabled);
    }
    private void setEnabledPane2(boolean isEnabled)
    {
        radioButton2.setSelected(isEnabled);
        jLabel8.setEnabled(isEnabled);
        textField4.setEnabled(isEnabled);
        jButton4.setEnabled(isEnabled);
    }
    private void setEnabledPane3(boolean isEnabled)
    {
        radioButton3.setSelected(isEnabled);
        textArea.setEnabled(isEnabled);
    }
    
    int timesToRun = 1;
    final long compileTimeLimit = 10_000;
    long tlGenInp = 10_000, tlSol1 = 10_000, tlSol2 = 10_000;
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bug_Finder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bug_Finder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bug_Finder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bug_Finder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Bug_Finder obj = new Bug_Finder();
                obj.setLocationRelativeTo(null);
                obj.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboBox1;
    private javax.swing.JComboBox<String> comboBox2;
    private javax.swing.JComboBox<String> comboBox3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JRadioButton radioButton1;
    private javax.swing.JRadioButton radioButton2;
    private javax.swing.JRadioButton radioButton3;
    private javax.swing.JTextArea textArea;
    private javax.swing.JTextField textField1;
    private javax.swing.JTextField textField2;
    private javax.swing.JTextField textField3;
    private javax.swing.JTextField textField4;
    // End of variables declaration//GEN-END:variables
}
