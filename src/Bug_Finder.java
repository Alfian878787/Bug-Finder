
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author sarthakmanna
 */
public class Bug_Finder extends javax.swing.JFrame {

    /**
     * Creates new form Checker
     */
    public Bug_Finder() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        textField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        textField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        comboBox1 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        comboBox2 = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        comboBox3 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        textField3 = new javax.swing.JTextField();
        radioButton1 = new javax.swing.JRadioButton();
        textField4 = new javax.swing.JTextField();
        radioButton2 = new javax.swing.JRadioButton();
        jButton4 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Solution 1");

        textField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField1ActionPerformed(evt);
            }
        });

        jButton1.setText("Browse");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Solution 2");

        textField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField2ActionPerformed(evt);
            }
        });

        jButton2.setText("Browse");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Language");

        comboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "C++", "Java", "Python 2", "Python 3" }));

        jLabel4.setText("Language");

        comboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "C++", "Java", "Python 2", "Python 3" }));

        jButton3.setText("Browse");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel5.setText("Language");

        comboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "C++", "Java", "Python 2", "Python 3" }));

        jLabel6.setText("Code");

        textField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField3ActionPerformed(evt);
            }
        });

        radioButton1.setSelected(true);
        radioButton1.setText("Generate Test File");
        radioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton1ActionPerformed(evt);
            }
        });

        textField4.setEnabled(false);
        textField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField4ActionPerformed(evt);
            }
        });

        radioButton2.setText("Select Test File");
        radioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("Browse");
        jButton4.setEnabled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel8.setText("File");
        jLabel8.setEnabled(false);

        jButton5.setText("Run");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Show Log");
        jButton6.setEnabled(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(radioButton2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(textField4, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton4))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(textField3, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                                            .addComponent(comboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton3))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addGap(18, 18, 18)
                                                .addComponent(comboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addGap(18, 18, 18)
                                                .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addGap(18, 18, 18)
                                                .addComponent(comboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addGap(18, 18, 18)
                                                .addComponent(textField2, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton2))
                                    .addComponent(radioButton1))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(radioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(textField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(radioButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(textField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showOpenDialog(null);
        
        File selFile = fileChooser.getSelectedFile();
        
        if(selFile != null)
        {
            textField1.setText(selFile.getAbsolutePath());
            textFieldActionPerformed(textField1, comboBox1);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showOpenDialog(null);
        
        File selFile = fileChooser.getSelectedFile();
        
        if(selFile != null)
        {
            textField2.setText(selFile.getAbsolutePath());
            textFieldActionPerformed(textField2, comboBox2);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void textField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField1ActionPerformed
        // TODO add your handling code here:
        textFieldActionPerformed(textField1, comboBox1);
    }//GEN-LAST:event_textField1ActionPerformed

    private void textField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField2ActionPerformed
        // TODO add your handling code here:
        textFieldActionPerformed(textField2, comboBox2);
    }//GEN-LAST:event_textField2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showOpenDialog(null);
        
        File selFile = fileChooser.getSelectedFile();
        
        if(selFile != null)
        {
            textField3.setText(selFile.getAbsolutePath());
            textFieldActionPerformed(textField3, comboBox3);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void textField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField3ActionPerformed
        // TODO add your handling code here:
        textFieldActionPerformed(textField3, comboBox3);
    }//GEN-LAST:event_textField3ActionPerformed

    private void textField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textField4ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showOpenDialog(null);
        
        File selFile = fileChooser.getSelectedFile();
        
        if(selFile != null)
            textField4.setText(selFile.getAbsolutePath());
    }//GEN-LAST:event_jButton4ActionPerformed

    private void radioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButton1ActionPerformed
        // TODO add your handling code here:
        radioButton1.setSelected(true);
        radioButton2.setSelected(false);
        setEnabledPane1(true);
        setEnabledPane2(false);
    }//GEN-LAST:event_radioButton1ActionPerformed

    private void radioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButton2ActionPerformed
        // TODO add your handling code here:
        radioButton1.setSelected(false);
        radioButton2.setSelected(true);
        setEnabledPane1(false);
        setEnabledPane2(true);
    }//GEN-LAST:event_radioButton2ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, error_message,
                "Error Log", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
        System.out.println();
        
        error_message = new StringBuilder();
        outputMatches = false;
        input = null;
        output1 = null;
        output2 = null;
        
        try
        {
            generateInput();
        }
        catch(Exception e)
        {
            jButton6.setEnabled(true);
            JOptionPane.showMessageDialog(null, "Could not generate input.\n"
                    + "View error log for more details.", 
                    "Execution Failed", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try
        {
            output1 = run(new File(textField1.getText()),
                    comboBox1.getSelectedIndex(), input, "output1");
        }
        catch(Exception e)
        {
            jButton6.setEnabled(true);
            JOptionPane.showMessageDialog(null, "Compilation or runtime error in"
                    + " Solution 1.\nView error log for more details.",
                    "Execution Failed", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try
        {
            output2 = run(new File(textField2.getText()),
                    comboBox2.getSelectedIndex(), input, "output2");
        }
        catch(Exception e)
        {
            jButton6.setEnabled(true);
            JOptionPane.showMessageDialog(null, "Compilation or runtime error in"
                    + " Solution 2.\nView error log for more details.",
                    "Execution Failed", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        
        try
        {
            matchOutputs();
        }
        catch(Exception e)
        {
            error_message.append("Some internal error has occurred !!!\n") 
                    .append("Please report this issue to Sarthak Manna at\n")
                    .append("sarthakmannaofficial@gmail.com.");
            jButton6.setEnabled(true);
            JOptionPane.showMessageDialog(null, error_message,
                    "Unexpected Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        
        if(outputMatches)
        {
            jButton6.setEnabled(false);
            JOptionPane.showMessageDialog(null, "Outputs match.",
                    "Executed successfully", JOptionPane.INFORMATION_MESSAGE);
        }
        else
        {
            jButton6.setEnabled(true);
            JOptionPane.showMessageDialog(null, "Outputs mismatch.\n"
                    + "View error log for more details.",
                    "Execution Failed", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void textFieldActionPerformed(JTextField tf, JComboBox cb)
    {
        String text = tf.getText();
        if(text.endsWith("cpp"))
            cb.setSelectedIndex(0);
        else if(text.endsWith("java"))
            cb.setSelectedIndex(1);
        else if(text.endsWith("py") || text.endsWith("py2"))
            cb.setSelectedIndex(2);
        else if(text.endsWith("py3"))
            cb.setSelectedIndex(3);
    }
    
    private void setEnabledPane1(boolean isEnabled)
    {
        jLabel5.setEnabled(isEnabled);
        jLabel6.setEnabled(isEnabled);
        textField3.setEnabled(isEnabled);
        comboBox3.setEnabled(isEnabled);
        jButton3.setEnabled(isEnabled);
    }
    private void setEnabledPane2(boolean isEnabled)
    {
        jLabel8.setEnabled(isEnabled);
        textField4.setEnabled(isEnabled);
        jButton4.setEnabled(isEnabled);
    }
    
    private StringBuilder error_message;
    private boolean outputMatches;
    private File input, output1, output2;
    
    
    private void matchOutputs() throws Exception
    {
        outputMatches = false;
        
        if(output1 == null || output2 == null ||
                !output1.exists() || !output2.exists())
            throw new Exception();
        
        BufferedReader reader1 = new BufferedReader(new FileReader(output1));
        BufferedReader reader2 = new BufferedReader(new FileReader(output2));
        
        for(int i = 1; ; ++i)
        {
            String line1 = reader1.readLine(), line2 = reader2.readLine();
            
            if(line1 == null && line2 == null)
            {
                outputMatches = true;
                return;
            }
            else if(line1 == null && line2 != null)
            {
                error_message.append("Reached EOF (End-of-file) of output 1");
                return;
            }
            else if(line1 != null && line2 == null)
            {
                error_message.append("Reached EOF (End-of-file) of output 2");
                return;
            }
            else if(!line1.equals(line2))
            {
                error_message.append("Mismatch in outputs at line ").append(i);
                return;
            }
        }
    }
    
    private void generateInput() throws Exception
    {
        if(radioButton1.isSelected())
            input = run(new File(textField3.getText()),
                    comboBox3.getSelectedIndex(), null, "input");
        else
        {
            File file = new File(textField4.getText());
            if(!file.exists())
            {
                error_message.append("Input File does not exist.");
                throw new Exception();
            }
            input = file;
        }
    }
    
    private File run(File code, int language, File input, String outputFilename)
            throws Exception
    {
        if(!code.exists())
        {
            error_message.append("File does not exist.");
            throw new Exception();
        }
        
        switch(language)
        {
            case 0 :    // C++
                return runCppFile(code, input, outputFilename);
            case 1 :    // Java
                return runJavaFile(code, input, outputFilename);
            case 2 :    // Python 2
                return runPython2File(code, input, outputFilename);
            case 3 :    // Python 3
                return runPython3File(code, input, outputFilename);
        }
        throw new Exception();
    }
    
    
    
    private File runCppFile(File code, File input, String outputFilename)
            throws Exception
    {
        String compileCommand = "g++ " + code.getAbsolutePath();
        
        System.out.println(compileCommand);
        
        Process compile = Runtime.getRuntime().exec(new String[] {"bash", "-c",
            compileCommand});
        compile.waitFor();
        
        if(compile.exitValue() != 0)
        {
            printErrorMessage(compile.getInputStream());
            printErrorMessage(compile.getErrorStream());
            throw new Exception();
        }
        
        
        String runCommand = "./a.out";
        
        if(input != null)
            runCommand += " < " + input.getAbsolutePath();
        
        File output = new File(code.getParent() + "/" + outputFilename);
        runCommand += " > " + output.getAbsolutePath();
        
        System.out.println(runCommand);
        
        Process execution = Runtime.getRuntime().exec(new String[] {"bash", "-c",
            runCommand});
        execution.waitFor();
        
        if(execution.exitValue() != 0)
        {
            printErrorMessage(execution.getInputStream());
            printErrorMessage(execution.getErrorStream());
            throw new Exception();
        }
        
        return output;
    }
    
    private File runJavaFile(File code, File input, String outputFilename)
            throws Exception
    {
        String compileCommand = "javac " + code.getAbsolutePath();
        
        System.out.println(compileCommand);
        
        Process compile = Runtime.getRuntime().exec(new String[] {"bash", "-c",
            compileCommand});
        compile.waitFor();
        
        if(compile.exitValue() != 0)
        {
            printErrorMessage(compile.getInputStream());
            printErrorMessage(compile.getErrorStream());
            throw new Exception();
        }
        
        
        String className = code.getName();
        className = className.substring(0, className.lastIndexOf("."));
        String runCommand = "java -cp " + code.getParent() + " " + className;
        
        if(input != null)
            runCommand += " < " + input.getAbsolutePath();
        
        File output = new File(code.getParent() + "/" + outputFilename);
        runCommand += " > " + output.getAbsolutePath();
        
        System.out.println(runCommand);
        
        Process execution = Runtime.getRuntime().exec(new String[] {"bash", "-c",
            runCommand});
        execution.waitFor();
        
        if(execution.exitValue() != 0)
        {
            printErrorMessage(execution.getInputStream());
            printErrorMessage(execution.getErrorStream());
            throw new Exception();
        }
        
        return output;
    }
    
    private File runPython2File(File code, File input, String outputFilename)
            throws Exception
    {
        
        String runCommand = "python2 " + code.getAbsolutePath();
        
        if(input != null)
            runCommand += " < " + input.getAbsolutePath();
        
        File output = new File(code.getParent() + "/" + outputFilename);
        runCommand += " > " + output.getAbsolutePath();
        
        System.out.println(runCommand);
        
        Process execution = Runtime.getRuntime().exec(new String[] {"bash", "-c",
            runCommand});
        execution.waitFor();
        
        if(execution.exitValue() != 0)
        {
            printErrorMessage(execution.getInputStream());
            printErrorMessage(execution.getErrorStream());
            throw new Exception();
        }
        
        return output;
    }
    
    private File runPython3File(File code, File input, String outputFilename)
            throws Exception
    {
        String runCommand = "python3 " + code.getAbsolutePath();
        
        if(input != null)
            runCommand += " < " + input.getAbsolutePath();
        
        File output = new File(code.getParent() + "/" + outputFilename);
        runCommand += " > " + output.getAbsolutePath();
        
        System.out.println(runCommand);
        
        Process execution = Runtime.getRuntime().exec(new String[] {"bash", "-c",
            runCommand});
        execution.waitFor();
        
        if(execution.exitValue() != 0)
        {
            printErrorMessage(execution.getInputStream());
            printErrorMessage(execution.getErrorStream());
            throw new Exception();
        }
        
        return output;
    }
    
    private void printErrorMessage(InputStream stream) throws Exception
    {
        BufferedReader reader = new BufferedReader(new InputStreamReader(stream));
        String line;
        while((line = reader.readLine()) != null)
            error_message.append(line).append("\n");
        error_message.append("\n");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bug_Finder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bug_Finder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bug_Finder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bug_Finder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Bug_Finder obj = new Bug_Finder();
                obj.setLocationRelativeTo(null);
                obj.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboBox1;
    private javax.swing.JComboBox<String> comboBox2;
    private javax.swing.JComboBox<String> comboBox3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JRadioButton radioButton1;
    private javax.swing.JRadioButton radioButton2;
    private javax.swing.JTextField textField1;
    private javax.swing.JTextField textField2;
    private javax.swing.JTextField textField3;
    private javax.swing.JTextField textField4;
    // End of variables declaration//GEN-END:variables
}
